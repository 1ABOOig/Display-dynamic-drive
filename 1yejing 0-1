/**********************************************************************
*                 公司名称：成都世纪中科仪器有限公司				  *
*                 模块名称：main.c 								      *
*                 程序设计：袁杰       							      *
*                 设计时间：2010.08.20        						  *
*                 版 本 号: 20100820								  *
***********************************************************************
*                         基本描述
*    采用的主控芯片51系列单片机，时钟晶振32MHZ

				   

*                  PCF8566（4*24）段式液晶驱动芯片基本描述
* 1)硬件信息： 
* 采用专用的段式液晶驱动芯片PCF8566，该芯片可提供最大4×24个段的显示，
* 与单片机之间通过IIC接口连接 
* 与单片机连接的口线   SCL----P3.5		  SDA----P3.4

**********************************************************************/

#include"reg52.h"

#include "intrins.h"								// 包含宏定义的_nop_()函数（消耗一个机器周期）


/**********************************************************************
                       LCD模块的硬件定义和配置常数                 
**********************************************************************/



sbit  SDA = P3^4 ;                                   //   IIC总线数据信号线
sbit  SCL = P3^5 ;                                   //   IIC总线时钟信号线


/**********************************************************************
*                      主模块内部函数的定义                           *
**********************************************************************/

 void IIC_Start(void);                               //	 IIC总线启动函数

 void IIC_Stop(void);                                //	 IIC总线停止函数

 void IIC_Send_Byte(unsigned char  send_buf);		 //  IIC总线数据发送函数

 void PCF8566_Init(void);							 //  PCF8566芯片初始化函数 

 void Delay_50us(void);								 //  延时函数
 
 void Delay_6us(void);								 //  延时函数




/**********************************************************************
*                      主模块内部全局变量的定义                       *
**********************************************************************/

unsigned int  LEDChangNum;

/********************************************************************** 
/*                        系统主函数                                  *
/*********************************************************************/ 


int main(void)

  {
	  
	  PCF8566_Init();				  //  PCF8566芯片初始化
	

	
	  /****************   LCD显示屏显示测试  *******************/
									  
	  // 控制第一片PCF8566 
	 
	  IIC_Start();

	  	  
	  IIC_Send_Byte(0x7C);			  //   写入器件地址

	  IIC_Send_Byte(0xE0);			  //   选择主8566

	  
	  IIC_Send_Byte(0x00);			  //   写入地址指针设置指令，最高位为0，表示后面传送的数据为显示数据

	  
	  //  全显示图形字符，并显示“0、1、2、3、4、5、6、7、8、9“等九个字符
	 
	  
	  IIC_Send_Byte(0x31);			  //    0   第1位字符 列1-4
	  IIC_Send_Byte(0x83);
	 
	   

	  IIC_Send_Byte(0x00);			  //    1   第2位字符 列5-8
	  IIC_Send_Byte(0x03);


	  IIC_Send_Byte(0x61);		      //    2   第3位字符 列9-12
	  IIC_Send_Byte(0x85);
	  

	  IIC_Send_Byte(0x41);		      //    3   第4位字符 列13-16
	  IIC_Send_Byte(0x87);



	  IIC_Send_Byte(0x50);		      //    4   第5位字符 列17-20
	  IIC_Send_Byte(0x07);



	  //IIC_Send_Byte(0x51);			  //	5   第6位字符 列21-24
	  //IIC_Send_Byte(0x86);
		
		IIC_Send_Byte(0x51);		      //    5   第5位字符 列17-20
	  IIC_Send_Byte(0x86);
	
	  IIC_Stop();




 
      // 控制第二片PCF8566 
	
      IIC_Start();

	  
	  IIC_Send_Byte(0x7C);			  //   写入器件地址

	  IIC_Send_Byte(0xE1);			  //   选择从8566


	  
	  IIC_Send_Byte(0x00);			  //   写入地址指针设置指令，最高位为0，表示后面传送的数据为显示数据
	  
	  
	 
	 
	 
	  IIC_Send_Byte(0x07);			  //  6  对应列25-28 
	  IIC_Send_Byte(0x18);			  //	


								 
	  IIC_Send_Byte(0x60);			  //  7  对应列29-32
	  IIC_Send_Byte(0x10);			  //    



	  IIC_Send_Byte(0x37);		      // 8   对应列33-36
	  IIC_Send_Byte(0x18);			  //    



	  IIC_Send_Byte(0x75);		      // 9   对应列37-40
	  IIC_Send_Byte(0x10);			  //	



	  IIC_Send_Byte(0x70);		      //    对应列41-44
	  
	  IIC_Send_Byte(0x00);			  //	



	  IIC_Send_Byte(0x00);			  //	对应列45-48
	  IIC_Send_Byte(0x00);			  //   

	   

	  IIC_Stop();




 
 }


/******************** LCD点阵显示相关模块相关程序 ***************************/


 
/********************************************************************** 

 函 数 名：IIC_Start()
 功    能：IIC起始条件
 说    明：模块的内部函数，提供给本模块其他程序调用
 入口参数：无
 返 回 值：无  
 其他：    1.起始条件：SCL为高时，SDA的下降沿
***********************************************************************/ 


 void IIC_Start(void)
{
    
	       
	  SDA=1;		                            // SDA=1;	发送起始条件的数据信号
	  _nop_();
	  SCL=1; 		                            // SCL=1;

	  Delay_6us();							    // 起始条件建立时间大于4.7us,延时



	  SDA=0;	                                // SDA=0;发送起始信号

	  Delay_6us();							    // 起始条件锁定时间大于4μs,延时

	  SCL=0;; 	                                // SCL=0;钳住I2C总线，准备发送或接收数据
	  
	  Delay_6us();

 }

/********************************************************************** 

 函 数 名：IIC_Stop()
 功    能：IIC停止条件
 说    明：模块的内部函数，提供给本模块其他程序调用
 入口参数：无
 返 回 值：无  
 其他：    1.停止条件：SCL为高时，SDA的上升沿
***********************************************************************/ 


 void IIC_Stop(void)
{
    

      SDA=0;	                              // SDA=0;发送结束条件的数据信号
	  _nop_();
	  SCL=1; 		                          // SCL=1;

	  Delay_6us();							  // 结束条件建立时间大于4μs

	  SDA=1;		                          // SDA=1;发送I2C总线结束信号

	  Delay_6us();							  // 起始条件锁定时间大于4μs,延时

	 

 }




 
/********************************************************************** 

 函 数 名：IIC_Send_Byte(unsigned char  send_buf)
 功    能：通过IIC总线给PCF8566发一个字符(命令或数据)
 说    明：模块的内部函数，提供给本模块其他程序调用
 入口参数：send_buf：向PCF8566写入的字符
 返 回 值：无  
 其他：    
***********************************************************************/ 
 

void IIC_Send_Byte(unsigned char  send_buf)
{
      unsigned char i;	 

	  	  
	
	  //  发送数据 
	 
      for(i=8;i!=0;i--)
          {
              if((send_buf&0x80)==0x80)
                {
                
				   SDA=1;		                      // SDA=1;   
				                                   
                
                }
              else
	            {									  
                 
				   SDA=0;	                          // SDA=0;
                 
                }
              send_buf=send_buf<<1;
             

			  SCL=1; 		                          // SCL=1;置时钟线为高，通知被控器开始接收数据位
              
			  Delay_6us();                            // 保证时钟高电平周期大于4μs
              
			  
			  SCL=0;	                              // SCL=0;
	     
          }
      
	  //  判断应答信号 在SCL为高电平期间，判断SDA是否为低来判断是否有应答信号

	  _nop_();
	  _nop_();
	  SDA=1;		                                 // SDA=1;8位发送完后释放数据线，准备接收应答位，做输入判断时，要让IO口输出1
	  _nop_();
	  _nop_();
	  SCL=1; 		                                 // SCL=1;
	  Delay_50us();
	  
	  while( SDA==1);	                             // SDA为高，没有应答信号则循环等待

	  SCL=0; 	                                     // SCL=0;

	  _nop_();
	  _nop_();
  
 
}  


/******************************************************************** 

 函 数 名：PCF8566_Init()
 功    能：初始化PCF8566
 说    明：模块的外部函数，提供给主程序调用
 入口参数：无
 返 回 值：无  
 其他：    1)  发送命令时，在最后一个命令时，命令数据的最高位为0，提示其后发送的是数据
           2)
***********************************************************************/

void  PCF8566_Init(void)
 {
 
	   SCL = 1;		                  // SCL置为高电平
       SDA = 1;	                      // SDA置为高电平
	  
	  // 初始化第一片PCF8566 
	  
	  IIC_Start();
	  	  
	  IIC_Send_Byte(0x7C);			  //   写入器件地址

	  IIC_Send_Byte(0xE0);			  //   选择主8566
	  
	  IIC_Send_Byte(0xC8);			  //   写入显示方式设置指令:驱动方式四个背电极；1/3偏压；允许显示，节电模式
  
	  IIC_Stop();

	  // 控制第二片PCF8566 
    
	  
      IIC_Start();
	  
	  IIC_Send_Byte(0x7C);			  //   写入器件地址

	  IIC_Send_Byte(0xE1);			  //   选择从8566
	  
	  IIC_Send_Byte(0xC8);			  //   写入显示方式设置指令:驱动方式四个背电极；1/3偏压；允许显示，节电模式

	  IIC_Stop();
     
    
 }


 /********************************************************************** 

 函 数 名：Delay_6us(void)
 功    能：延时函数
 说    明：软件延时
 入口参数：无
 返 回 值：无
 其    他：    
**********************************************************************/ 

void Delay_6us(void)
    {
      
	   _nop_();_nop_();_nop_();
	   _nop_();_nop_();_nop_();
	   _nop_();_nop_();_nop_();
	   _nop_();_nop_();_nop_();
	   _nop_();_nop_();_nop_();
	   _nop_();_nop_();_nop_();
   
    }

 /********************************************************************** 

 函 数 名：Delay_50us(void)
 功    能：延时函数
 说    明：软件延时
 入口参数：无
 返 回 值：无
 其    他：    
**********************************************************************/ 

void Delay_50us(void)
    {
      
	   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
	   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
	   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
	   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
	   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
	   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
	   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
	   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
	   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
	   _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
   
    }
	 	  
